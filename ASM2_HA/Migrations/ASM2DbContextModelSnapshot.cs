// <auto-generated />
using System;
using ASM2_HA.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASM2_HA.Migrations
{
    [DbContext(typeof(ASM2DbContext))]
    partial class ASM2DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ASM2_HA.Models.GHCT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GioHangId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SanPhamId")
                        .HasColumnType("int");

                    b.Property<Guid?>("SanPhamId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GioHangId");

                    b.HasIndex("SanPhamId1");

                    b.ToTable("GHCTs");
                });

            modelBuilder.Entity("ASM2_HA.Models.GioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("GioHangs");
                });

            modelBuilder.Entity("ASM2_HA.Models.HDCT", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("HoaDonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SanPhamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ToTalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("HoaDonId");

                    b.HasIndex("SanPhamId");

                    b.ToTable("HDCTs");
                });

            modelBuilder.Entity("ASM2_HA.Models.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SoldDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("ASM2_HA.Models.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("ASM2_HA.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ASM2_HA.Models.GHCT", b =>
                {
                    b.HasOne("ASM2_HA.Models.GioHang", "GioHang")
                        .WithMany("GHCTs")
                        .HasForeignKey("GioHangId");

                    b.HasOne("ASM2_HA.Models.SanPham", "SanPham")
                        .WithMany("GHCTs")
                        .HasForeignKey("SanPhamId1");

                    b.Navigation("GioHang");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ASM2_HA.Models.GioHang", b =>
                {
                    b.HasOne("ASM2_HA.Models.User", "User")
                        .WithOne("GioHang")
                        .HasForeignKey("ASM2_HA.Models.GioHang", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASM2_HA.Models.HDCT", b =>
                {
                    b.HasOne("ASM2_HA.Models.HoaDon", "HoaDon")
                        .WithMany("HDCTs")
                        .HasForeignKey("HoaDonId");

                    b.HasOne("ASM2_HA.Models.SanPham", "SanPham")
                        .WithMany("HDCTs")
                        .HasForeignKey("SanPhamId");

                    b.Navigation("HoaDon");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("ASM2_HA.Models.HoaDon", b =>
                {
                    b.HasOne("ASM2_HA.Models.User", "User")
                        .WithMany("HoaDons")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASM2_HA.Models.GioHang", b =>
                {
                    b.Navigation("GHCTs");
                });

            modelBuilder.Entity("ASM2_HA.Models.HoaDon", b =>
                {
                    b.Navigation("HDCTs");
                });

            modelBuilder.Entity("ASM2_HA.Models.SanPham", b =>
                {
                    b.Navigation("GHCTs");

                    b.Navigation("HDCTs");
                });

            modelBuilder.Entity("ASM2_HA.Models.User", b =>
                {
                    b.Navigation("GioHang");

                    b.Navigation("HoaDons");
                });
#pragma warning restore 612, 618
        }
    }
}
